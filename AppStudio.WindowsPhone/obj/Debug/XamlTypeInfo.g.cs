//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace AppStudio
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace AppStudio.AppStudio_WindowsPhone_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[46];
            _typeNameTable[0] = "AppStudio.Controls.Html2Xaml.Properties";
            _typeNameTable[1] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "AppStudio.Controls.VariableSizedGrid";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.GridView";
            _typeNameTable[6] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[7] = "AppStudio.Controls.RichTextColumns";
            _typeNameTable[8] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.RichTextBlock";
            _typeNameTable[10] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[11] = "AppStudio.Commands.ItemClickCommand";
            _typeNameTable[12] = "Object";
            _typeNameTable[13] = "System.Windows.Input.ICommand";
            _typeNameTable[14] = "AppStudio.Controls.VisibilityConverter";
            _typeNameTable[15] = "AppStudio.Controls.StringVisibilityConverter";
            _typeNameTable[16] = "AppStudio.Controls.BoolToVisibilityConverter";
            _typeNameTable[17] = "AppStudio.Controls.GridLengthConverter";
            _typeNameTable[18] = "AppStudio.ActionCommands";
            _typeNameTable[19] = "AppStudio.Views.ImageViewer";
            _typeNameTable[20] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[22] = "AppStudio.NavigationHelper";
            _typeNameTable[23] = "AppStudio.Views.MainPage";
            _typeNameTable[24] = "AppStudio.ViewModels.MainViewModel";
            _typeNameTable[25] = "AppStudio.Data.BindableBase";
            _typeNameTable[26] = "AppStudio.Views.FacebookPage";
            _typeNameTable[27] = "AppStudio.ViewModels.FacebookViewModel";
            _typeNameTable[28] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.FacebookSchema>";
            _typeNameTable[29] = "AppStudio.ViewModels.ViewModelBase";
            _typeNameTable[30] = "AppStudio.Views.TwitterPage";
            _typeNameTable[31] = "AppStudio.ViewModels.TwitterViewModel";
            _typeNameTable[32] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TwitterSchema>";
            _typeNameTable[33] = "AppStudio.Views.InstagramPage";
            _typeNameTable[34] = "AppStudio.ViewModels.InstagramViewModel";
            _typeNameTable[35] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.InstagramSchema>";
            _typeNameTable[36] = "AppStudio.Views.FacebookDetail";
            _typeNameTable[37] = "AppStudio.Views.InstagramDetail";
            _typeNameTable[38] = "AppStudio.Views.VAWHotlinesDetail";
            _typeNameTable[39] = "AppStudio.ViewModels.VAWHotlinesViewModel";
            _typeNameTable[40] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VAWHotlinesSchema>";
            _typeNameTable[41] = "Windows.UI.Color";
            _typeNameTable[42] = "System.ValueType";
            _typeNameTable[43] = "Byte";
            _typeNameTable[44] = "AppStudio.Controls.RichTextBlockStyleConverter";
            _typeNameTable[45] = "Windows.UI.Xaml.Style";

            _typeTable = new global::System.Type[46];
            _typeTable[0] = typeof(global::AppStudio.Controls.Html2Xaml.Properties);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::AppStudio.Controls.VariableSizedGrid);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.GridView);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[7] = typeof(global::AppStudio.Controls.RichTextColumns);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.RichTextBlock);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[11] = typeof(global::AppStudio.Commands.ItemClickCommand);
            _typeTable[12] = typeof(global::System.Object);
            _typeTable[13] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[14] = typeof(global::AppStudio.Controls.VisibilityConverter);
            _typeTable[15] = typeof(global::AppStudio.Controls.StringVisibilityConverter);
            _typeTable[16] = typeof(global::AppStudio.Controls.BoolToVisibilityConverter);
            _typeTable[17] = typeof(global::AppStudio.Controls.GridLengthConverter);
            _typeTable[18] = typeof(global::AppStudio.ActionCommands);
            _typeTable[19] = typeof(global::AppStudio.Views.ImageViewer);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[22] = typeof(global::AppStudio.NavigationHelper);
            _typeTable[23] = typeof(global::AppStudio.Views.MainPage);
            _typeTable[24] = typeof(global::AppStudio.ViewModels.MainViewModel);
            _typeTable[25] = typeof(global::AppStudio.Data.BindableBase);
            _typeTable[26] = typeof(global::AppStudio.Views.FacebookPage);
            _typeTable[27] = typeof(global::AppStudio.ViewModels.FacebookViewModel);
            _typeTable[28] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.FacebookSchema>);
            _typeTable[29] = typeof(global::AppStudio.ViewModels.ViewModelBase);
            _typeTable[30] = typeof(global::AppStudio.Views.TwitterPage);
            _typeTable[31] = typeof(global::AppStudio.ViewModels.TwitterViewModel);
            _typeTable[32] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.TwitterSchema>);
            _typeTable[33] = typeof(global::AppStudio.Views.InstagramPage);
            _typeTable[34] = typeof(global::AppStudio.ViewModels.InstagramViewModel);
            _typeTable[35] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.InstagramSchema>);
            _typeTable[36] = typeof(global::AppStudio.Views.FacebookDetail);
            _typeTable[37] = typeof(global::AppStudio.Views.InstagramDetail);
            _typeTable[38] = typeof(global::AppStudio.Views.VAWHotlinesDetail);
            _typeTable[39] = typeof(global::AppStudio.ViewModels.VAWHotlinesViewModel);
            _typeTable[40] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.VAWHotlinesSchema>);
            _typeTable[41] = typeof(global::Windows.UI.Color);
            _typeTable[42] = typeof(global::System.ValueType);
            _typeTable[43] = typeof(global::System.Byte);
            _typeTable[44] = typeof(global::AppStudio.Controls.RichTextBlockStyleConverter);
            _typeTable[45] = typeof(global::Windows.UI.Xaml.Style);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Properties() { return new global::AppStudio.Controls.Html2Xaml.Properties(); }
        private object Activate_4_VariableSizedGrid() { return new global::AppStudio.Controls.VariableSizedGrid(); }
        private object Activate_7_RichTextColumns() { return new global::AppStudio.Controls.RichTextColumns(); }
        private object Activate_11_ItemClickCommand() { return new global::AppStudio.Commands.ItemClickCommand(); }
        private object Activate_14_VisibilityConverter() { return new global::AppStudio.Controls.VisibilityConverter(); }
        private object Activate_15_StringVisibilityConverter() { return new global::AppStudio.Controls.StringVisibilityConverter(); }
        private object Activate_16_BoolToVisibilityConverter() { return new global::AppStudio.Controls.BoolToVisibilityConverter(); }
        private object Activate_17_GridLengthConverter() { return new global::AppStudio.Controls.GridLengthConverter(); }
        private object Activate_18_ActionCommands() { return new global::AppStudio.ActionCommands(); }
        private object Activate_19_ImageViewer() { return new global::AppStudio.Views.ImageViewer(); }
        private object Activate_23_MainPage() { return new global::AppStudio.Views.MainPage(); }
        private object Activate_24_MainViewModel() { return new global::AppStudio.ViewModels.MainViewModel(); }
        private object Activate_26_FacebookPage() { return new global::AppStudio.Views.FacebookPage(); }
        private object Activate_27_FacebookViewModel() { return new global::AppStudio.ViewModels.FacebookViewModel(); }
        private object Activate_30_TwitterPage() { return new global::AppStudio.Views.TwitterPage(); }
        private object Activate_31_TwitterViewModel() { return new global::AppStudio.ViewModels.TwitterViewModel(); }
        private object Activate_33_InstagramPage() { return new global::AppStudio.Views.InstagramPage(); }
        private object Activate_34_InstagramViewModel() { return new global::AppStudio.ViewModels.InstagramViewModel(); }
        private object Activate_36_FacebookDetail() { return new global::AppStudio.Views.FacebookDetail(); }
        private object Activate_37_InstagramDetail() { return new global::AppStudio.Views.InstagramDetail(); }
        private object Activate_38_VAWHotlinesDetail() { return new global::AppStudio.Views.VAWHotlinesDetail(); }
        private object Activate_39_VAWHotlinesViewModel() { return new global::AppStudio.ViewModels.VAWHotlinesViewModel(); }
        private object Activate_44_RichTextBlockStyleConverter() { return new global::AppStudio.Controls.RichTextBlockStyleConverter(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  AppStudio.Controls.Html2Xaml.Properties
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_0_Properties;
                userType.AddMemberName("Html");
                userType.AddMemberName("ContainsCrlf");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  AppStudio.Controls.VariableSizedGrid
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.GridView"));
                userType.Activator = Activate_4_VariableSizedGrid;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.GridView
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  AppStudio.Controls.RichTextColumns
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_7_RichTextColumns;
                userType.SetContentPropertyName("AppStudio.Controls.RichTextColumns.RichTextContent");
                userType.AddMemberName("RichTextContent");
                userType.AddMemberName("ColumnTemplate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.UI.Xaml.Controls.RichTextBlock
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  AppStudio.Commands.ItemClickCommand
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_ItemClickCommand;
                userType.AddMemberName("Command");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  Object
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  System.Windows.Input.ICommand
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  AppStudio.Controls.VisibilityConverter
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  AppStudio.Controls.StringVisibilityConverter
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_StringVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  AppStudio.Controls.BoolToVisibilityConverter
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_BoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  AppStudio.Controls.GridLengthConverter
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_GridLengthConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  AppStudio.ActionCommands
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_18_ActionCommands;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  AppStudio.Views.ImageViewer
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_ImageViewer;
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  AppStudio.NavigationHelper
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  AppStudio.Views.MainPage
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_MainPage;
                userType.AddMemberName("MainViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  AppStudio.ViewModels.MainViewModel
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Data.BindableBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  AppStudio.Data.BindableBase
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 26:   //  AppStudio.Views.FacebookPage
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_FacebookPage;
                userType.AddMemberName("FacebookModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  AppStudio.ViewModels.FacebookViewModel
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.FacebookSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.FacebookSchema>
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  AppStudio.ViewModels.ViewModelBase
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Data.BindableBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  AppStudio.Views.TwitterPage
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_TwitterPage;
                userType.AddMemberName("TwitterModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  AppStudio.ViewModels.TwitterViewModel
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TwitterSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TwitterSchema>
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  AppStudio.Views.InstagramPage
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_InstagramPage;
                userType.AddMemberName("InstagramModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  AppStudio.ViewModels.InstagramViewModel
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.InstagramSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.InstagramSchema>
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  AppStudio.Views.FacebookDetail
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_FacebookDetail;
                userType.AddMemberName("FacebookModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  AppStudio.Views.InstagramDetail
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_InstagramDetail;
                userType.AddMemberName("InstagramModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  AppStudio.Views.VAWHotlinesDetail
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_VAWHotlinesDetail;
                userType.AddMemberName("VAWHotlinesModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  AppStudio.ViewModels.VAWHotlinesViewModel
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VAWHotlinesSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VAWHotlinesSchema>
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Color
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 42:   //  System.ValueType
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 43:   //  Byte
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  AppStudio.Controls.RichTextBlockStyleConverter
                userType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_44_RichTextBlockStyleConverter;
                userType.AddMemberName("LargeStyle");
                userType.AddMemberName("NormalStyle");
                userType.AddMemberName("SmallStyle");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Windows.UI.Xaml.Style
                xamlType = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }


        private object get_0_Properties_Html(object instance)
        {
            return global::AppStudio.Controls.Html2Xaml.Properties.GetHtml((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_0_Properties_Html(object instance, object Value)
        {
            global::AppStudio.Controls.Html2Xaml.Properties.SetHtml((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_1_Properties_ContainsCrlf(object instance)
        {
            return global::AppStudio.Controls.Html2Xaml.Properties.GetContainsCrlf((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_1_Properties_ContainsCrlf(object instance, object Value)
        {
            global::AppStudio.Controls.Html2Xaml.Properties.SetContainsCrlf((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_2_RichTextColumns_RichTextContent(object instance)
        {
            var that = (global::AppStudio.Controls.RichTextColumns)instance;
            return that.RichTextContent;
        }
        private void set_2_RichTextColumns_RichTextContent(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.RichTextColumns)instance;
            that.RichTextContent = (global::Windows.UI.Xaml.Controls.RichTextBlock)Value;
        }
        private object get_3_RichTextColumns_ColumnTemplate(object instance)
        {
            var that = (global::AppStudio.Controls.RichTextColumns)instance;
            return that.ColumnTemplate;
        }
        private void set_3_RichTextColumns_ColumnTemplate(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.RichTextColumns)instance;
            that.ColumnTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_4_ItemClickCommand_Command(object instance)
        {
            return global::AppStudio.Commands.ItemClickCommand.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_4_ItemClickCommand_Command(object instance, object Value)
        {
            global::AppStudio.Commands.ItemClickCommand.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }
        private object get_5_ImageViewer_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.ImageViewer)instance;
            return that.NavigationHelper;
        }
        private object get_6_MainPage_MainViewModel(object instance)
        {
            var that = (global::AppStudio.Views.MainPage)instance;
            return that.MainViewModel;
        }
        private object get_7_MainPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MainPage)instance;
            return that.NavigationHelper;
        }
        private object get_8_FacebookPage_FacebookModel(object instance)
        {
            var that = (global::AppStudio.Views.FacebookPage)instance;
            return that.FacebookModel;
        }
        private object get_9_FacebookPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.FacebookPage)instance;
            return that.NavigationHelper;
        }
        private object get_10_TwitterPage_TwitterModel(object instance)
        {
            var that = (global::AppStudio.Views.TwitterPage)instance;
            return that.TwitterModel;
        }
        private object get_11_TwitterPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.TwitterPage)instance;
            return that.NavigationHelper;
        }
        private object get_12_InstagramPage_InstagramModel(object instance)
        {
            var that = (global::AppStudio.Views.InstagramPage)instance;
            return that.InstagramModel;
        }
        private object get_13_InstagramPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.InstagramPage)instance;
            return that.NavigationHelper;
        }
        private object get_14_FacebookDetail_FacebookModel(object instance)
        {
            var that = (global::AppStudio.Views.FacebookDetail)instance;
            return that.FacebookModel;
        }
        private object get_15_FacebookDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.FacebookDetail)instance;
            return that.NavigationHelper;
        }
        private object get_16_InstagramDetail_InstagramModel(object instance)
        {
            var that = (global::AppStudio.Views.InstagramDetail)instance;
            return that.InstagramModel;
        }
        private object get_17_InstagramDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.InstagramDetail)instance;
            return that.NavigationHelper;
        }
        private object get_18_VAWHotlinesDetail_VAWHotlinesModel(object instance)
        {
            var that = (global::AppStudio.Views.VAWHotlinesDetail)instance;
            return that.VAWHotlinesModel;
        }
        private object get_19_VAWHotlinesDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.VAWHotlinesDetail)instance;
            return that.NavigationHelper;
        }
        private object get_20_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_20_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_21_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_21_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_22_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_22_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_23_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_23_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_24_RichTextBlockStyleConverter_LargeStyle(object instance)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            return that.LargeStyle;
        }
        private void set_24_RichTextBlockStyleConverter_LargeStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            that.LargeStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_25_RichTextBlockStyleConverter_NormalStyle(object instance)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            return that.NormalStyle;
        }
        private void set_25_RichTextBlockStyleConverter_NormalStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            that.NormalStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_26_RichTextBlockStyleConverter_SmallStyle(object instance)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            return that.SmallStyle;
        }
        private void set_26_RichTextBlockStyleConverter_SmallStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.RichTextBlockStyleConverter)instance;
            that.SmallStyle = (global::Windows.UI.Xaml.Style)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember xamlMember = null;
            global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "AppStudio.Controls.Html2Xaml.Properties.Html":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.Html2Xaml.Properties");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "Html", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_0_Properties_Html;
                xamlMember.Setter = set_0_Properties_Html;
                break;
            case "AppStudio.Controls.Html2Xaml.Properties.ContainsCrlf":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.Html2Xaml.Properties");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "ContainsCrlf", "Boolean");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_1_Properties_ContainsCrlf;
                xamlMember.Setter = set_1_Properties_ContainsCrlf;
                break;
            case "AppStudio.Controls.RichTextColumns.RichTextContent":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.RichTextColumns");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "RichTextContent", "Windows.UI.Xaml.Controls.RichTextBlock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_RichTextColumns_RichTextContent;
                xamlMember.Setter = set_2_RichTextColumns_RichTextContent;
                break;
            case "AppStudio.Controls.RichTextColumns.ColumnTemplate":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.RichTextColumns");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "ColumnTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_RichTextColumns_ColumnTemplate;
                xamlMember.Setter = set_3_RichTextColumns_ColumnTemplate;
                break;
            case "AppStudio.Commands.ItemClickCommand.Command":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Commands.ItemClickCommand");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_4_ItemClickCommand_Command;
                xamlMember.Setter = set_4_ItemClickCommand_Command;
                break;
            case "AppStudio.Views.ImageViewer.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ImageViewer");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_5_ImageViewer_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MainPage.MainViewModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MainPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "MainViewModel", "AppStudio.ViewModels.MainViewModel");
                xamlMember.Getter = get_6_MainPage_MainViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MainPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MainPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_7_MainPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.FacebookPage.FacebookModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.FacebookPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "FacebookModel", "AppStudio.ViewModels.FacebookViewModel");
                xamlMember.Getter = get_8_FacebookPage_FacebookModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.FacebookPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.FacebookPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_9_FacebookPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TwitterPage.TwitterModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TwitterPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "TwitterModel", "AppStudio.ViewModels.TwitterViewModel");
                xamlMember.Getter = get_10_TwitterPage_TwitterModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TwitterPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TwitterPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_11_TwitterPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.InstagramPage.InstagramModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.InstagramPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "InstagramModel", "AppStudio.ViewModels.InstagramViewModel");
                xamlMember.Getter = get_12_InstagramPage_InstagramModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.InstagramPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.InstagramPage");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_13_InstagramPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.FacebookDetail.FacebookModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.FacebookDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "FacebookModel", "AppStudio.ViewModels.FacebookViewModel");
                xamlMember.Getter = get_14_FacebookDetail_FacebookModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.FacebookDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.FacebookDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_15_FacebookDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.InstagramDetail.InstagramModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.InstagramDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "InstagramModel", "AppStudio.ViewModels.InstagramViewModel");
                xamlMember.Getter = get_16_InstagramDetail_InstagramModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.InstagramDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.InstagramDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_17_InstagramDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VAWHotlinesDetail.VAWHotlinesModel":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VAWHotlinesDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "VAWHotlinesModel", "AppStudio.ViewModels.VAWHotlinesViewModel");
                xamlMember.Getter = get_18_VAWHotlinesDetail_VAWHotlinesModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VAWHotlinesDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VAWHotlinesDetail");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_19_VAWHotlinesDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.UI.Color.A":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_20_Color_A;
                xamlMember.Setter = set_20_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_21_Color_B;
                xamlMember.Setter = set_21_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_22_Color_G;
                xamlMember.Setter = set_22_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_23_Color_R;
                xamlMember.Setter = set_23_Color_R;
                break;
            case "AppStudio.Controls.RichTextBlockStyleConverter.LargeStyle":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.RichTextBlockStyleConverter");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "LargeStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_24_RichTextBlockStyleConverter_LargeStyle;
                xamlMember.Setter = set_24_RichTextBlockStyleConverter_LargeStyle;
                break;
            case "AppStudio.Controls.RichTextBlockStyleConverter.NormalStyle":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.RichTextBlockStyleConverter");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "NormalStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_25_RichTextBlockStyleConverter_NormalStyle;
                xamlMember.Setter = set_25_RichTextBlockStyleConverter_NormalStyle;
                break;
            case "AppStudio.Controls.RichTextBlockStyleConverter.SmallStyle":
                userType = (global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.RichTextBlockStyleConverter");
                xamlMember = new global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlMember(this, "SmallStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_26_RichTextBlockStyleConverter_SmallStyle;
                xamlMember.Setter = set_26_RichTextBlockStyleConverter_SmallStyle;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlSystemBaseType
    {
        global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AppStudio.AppStudio_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


